package edu.cmu.cs.cs214.hw5.framework.plugin.control;

import javax.swing.JPanel;

/**
 * The {@code ControlPoint} interface outlines the core methods of a control
 * point in a control panel. A control point is responsible for control one
 * specific variable of type T in the control panel.
 * <p>
 * Some sample control points include:
 * data source control, timestamp range filter, sentiment range filter,
 * location filter, keyword filter, etc
 *
 * @param <T>       The type of the variable to control
 */
public interface ControlPoint<T> {
    /**
     * Gets the name of the control point. The name will be used as the key
     * in the {@code parameters} map generated by the control panel. See
     * {@code getParameters} function in the {@code ControlPanel} class.
     *
     * @return  The name of the control point
     */
    public String getControlName();

    /**
     * Gets the default value of the control point.
     *
     * @return  The default value of the control point
     */
    public T getDefaultValue();

    /**
     * Gets the current value of the control point. The current value will be used
     * as the value in the {@code parameters} map generated by the control panel.
     * See {@code getParameters} function in the {@code ControlPanel} class.
     *
     * @return  The current value of the control point
     */
    public T getCurrentValue();


    /**
     * Visualizes the GUI of the control point
     *
     * @return      {@code JPanel} that represents the GUI of the control point
     */
    public JPanel onDisplay();
}
